/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CardCollection,
  CardCollectionInterface,
} from "../../contracts/CardCollection";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC721EnumerableForbiddenBatchMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "ERC721OutOfBoundsIndex",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Collected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "increment",
        type: "bool",
      },
    ],
    name: "PopularityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "collect",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "externalEuint32",
        name: "inputEuint32",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "decreasePopularity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "other",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "myTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "theirTokenId",
        type: "uint256",
      },
    ],
    name: "exchange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "favoriteAdd",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "favoriteRemove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCardMeta",
    outputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "description_",
        type: "string",
      },
      {
        internalType: "string",
        name: "image_",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "tags_",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getFavorites",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getPopularity",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "externalEuint32",
        name: "inputEuint32",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "increasePopularity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "description_",
        type: "string",
      },
      {
        internalType: "string",
        name: "image_",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "tags_",
        type: "string[]",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    name: "tokensOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b50336040518060400160405280600981526020016810da185a5b90d85c9960ba1b8152506040518060400160405280600581526020016410d0d0549160da1b815250815f908161005f919061030e565b50600161006c828261030e565b5050506001600160a01b03811661009c57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100a581610225565b50610220610144604080516080810182525f80825260208201819052918101829052606081019190915250604080516080810182527350157cffd6bbfa2dece204a89ec419c23ef5755d815273cd3ab3bd6bcc0c0bf3e27912a92043e817b1cf69602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b80517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970080546001600160a01b03199081166001600160a01b039384161790915560208301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497018054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b6103c8565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061029e57607f821691505b6020821081036102bc57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561030957805f5260205f20601f840160051c810160208510156102e75750805b601f840160051c820191505b81811015610306575f81556001016102f3565b50505b505050565b81516001600160401b0381111561032757610327610276565b61033b81610335845461028a565b846102c2565b6020601f82116001811461036d575f83156103565750848201515b5f19600385901b1c1916600184901b178455610306565b5f84815260208120601f198516915b8281101561039c578785015182556020948501946001909201910161037c565b50848210156103b957868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b6129b0806103d55f395ff3fe608060405234801561000f575f5ffd5b50600436106101dc575f3560e01c8063715018a611610109578063b88d4fde1161009e578063da1f12ab1161006e578063da1f12ab14610416578063e985e9c51461041e578063f2fde38b14610459578063f5a228851461046c575f5ffd5b8063b88d4fde146103ca578063bf6b51be146103dd578063c87b56dd146103f0578063d6a6475614610403575f5ffd5b80639e413974116100d95780639e4139741461036e578063a0d138e914610381578063a22cb465146103a4578063b6c820a7146103b7575f5ffd5b8063715018a61461033a5780638462151c146103425780638da5cb5b1461035557806395d89b4114610366575f5ffd5b806328a7c2b61161017f5780634f6ccce71161014f5780634f6ccce7146102ee5780636352211e146103015780636b8357ac1461031457806370a0823114610327575f5ffd5b806328a7c2b6146102955780632f745c59146102a857806332646d84146102bb57806342842e0e146102db575f5ffd5b8063095ea7b3116101ba578063095ea7b31461024857806318160ddd1461025d578063236e06f61461026f57806323b872dd14610282575f5ffd5b806301ffc9a7146101e057806306fdde0314610208578063081812fc1461021d575b5f5ffd5b6101f36101ee366004612182565b61047f565b60405190151581526020015b60405180910390f35b61021061048f565b6040516101ff91906121cb565b61023061022b3660046121dd565b61051e565b6040516001600160a01b0390911681526020016101ff565b61025b61025636600461220f565b610545565b005b6008545b6040519081526020016101ff565b61025b61027d366004612237565b610554565b61025b610290366004612267565b61069f565b61025b6102a33660046122a1565b610722565b6102616102b636600461220f565b6107ff565b6102ce6102c936600461231d565b610862565b6040516101ff9190612336565b61025b6102e9366004612267565b6108cb565b6102616102fc3660046121dd565b6108ea565b61023061030f3660046121dd565b61093f565b61025b61032236600461220f565b610949565b61026161033536600461231d565b6109c0565b61025b610a05565b6102ce61035036600461231d565b610a18565b600a546001600160a01b0316610230565b610210610aad565b61026161037c3660046121dd565b610abc565b61039461038f3660046121dd565b610ad9565b6040516101ff9493929190612378565b61025b6103b2366004612417565b610d84565b61025b6103c53660046121dd565b610d8f565b61025b6103d83660046124ee565b610dfd565b6102616103eb366004612583565b610e15565b6102106103fe3660046121dd565b610f2c565b61025b6104113660046122a1565b610f9d565b612711610261565b6101f361042c3660046126ce565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b61025b61046736600461231d565b61106b565b61025b61047a3660046121dd565b6110a8565b5f6104898261119a565b92915050565b60605f805461049d906126ff565b80601f01602080910402602001604051908101604052809291908181526020018280546104c9906126ff565b80156105145780601f106104eb57610100808354040283529160200191610514565b820191905f5260205f20905b8154815290600101906020018083116104f757829003601f168201915b5050505050905090565b5f610528826111be565b505f828152600460205260409020546001600160a01b0316610489565b6105508282336111f6565b5050565b3361055e8361093f565b6001600160a01b0316146105b95760405162461bcd60e51b815260206004820152601660248201527f4e6f74206f776e6572206f66206d79546f6b656e49640000000000000000000060448201526064015b60405180910390fd5b826001600160a01b03166105cc8261093f565b6001600160a01b0316146106225760405162461bcd60e51b815260206004820152601f60248201527f4f74686572206e6f74206f776e6572206f66207468656972546f6b656e49640060448201526064016105b0565b61062d3384846108cb565b6106388333836108cb565b5f828152600d602052604090205461064f90611203565b505f828152600d60205260409020546106689084611212565b505f818152600d602052604090205461068090611203565b505f818152600d60205260409020546106999033611212565b50505050565b6001600160a01b0382166106c857604051633250574960e11b81525f60048201526024016105b0565b5f6106d4838333611224565b9050836001600160a01b0316816001600160a01b031614610699576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016105b0565b61072b846111be565b505f61076c8484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061123892505050565b5f868152600d60205260409020549091506107879082611245565b5f868152600d602052604090208190556107a090611203565b505f858152600d60205260409020546107c1906107bc8761093f565b611212565b506040515f815285907f5ea93eb915c6cf74f1a713a72c5ce3379397906941134ff1faf2b265f0adeb9f906020015b60405180910390a25050505050565b5f610809836109c0565b821061083a5760405163295f44f760e21b81526001600160a01b0384166004820152602481018390526044016105b0565b506001600160a01b03919091165f908152600660209081526040808320938352929052205490565b6001600160a01b0381165f908152600f60209081526040918290208054835181840281018401909452808452606093928301828280156108bf57602002820191905f5260205f20905b8154815260200190600101908083116108ab575b50505050509050919050565b6108e583838360405180602001604052805f815250610dfd565b505050565b5f6108f460085490565b821061091c5760405163295f44f760e21b81525f6004820152602481018390526044016105b0565b6008828154811061092f5761092f612737565b905f5260205f2001549050919050565b5f610489826111be565b6109543383836108cb565b5f818152600d602052604090205461096b90611203565b505f818152600d60205260409020546109849083611212565b5060405181906001600160a01b0384169033907f484decdc1e9549e1866295f6f86c889ded3f7de410e7488a7a415978589dc8fd905f90a45050565b5f6001600160a01b0382166109ea576040516322718ad960e21b81525f60048201526024016105b0565b506001600160a01b03165f9081526003602052604090205490565b610a0d611273565b610a165f6112a0565b565b60605f610a24836109c0565b90505f8167ffffffffffffffff811115610a4057610a40612450565b604051908082528060200260200182016040528015610a69578160200160208202803683370190505b5090505f5b82811015610aa557610a8085826107ff565b828281518110610a9257610a92612737565b6020908102919091010152600101610a6e565b509392505050565b60606001805461049d906126ff565b5f610ac6826111be565b50505f908152600d602052604090205490565b606080606080610ae8856111be565b505f858152600c60205260409020805481906001820190600283019060038401908490610b14906126ff565b80601f0160208091040260200160405190810160405280929190818152602001828054610b40906126ff565b8015610b8b5780601f10610b6257610100808354040283529160200191610b8b565b820191905f5260205f20905b815481529060010190602001808311610b6e57829003601f168201915b50505050509350828054610b9e906126ff565b80601f0160208091040260200160405190810160405280929190818152602001828054610bca906126ff565b8015610c155780601f10610bec57610100808354040283529160200191610c15565b820191905f5260205f20905b815481529060010190602001808311610bf857829003601f168201915b50505050509250818054610c28906126ff565b80601f0160208091040260200160405190810160405280929190818152602001828054610c54906126ff565b8015610c9f5780601f10610c7657610100808354040283529160200191610c9f565b820191905f5260205f20905b815481529060010190602001808311610c8257829003601f168201915b5050505050915080805480602002602001604051908101604052809291908181526020015f905b82821015610d6e578382905f5260205f20018054610ce3906126ff565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0f906126ff565b8015610d5a5780601f10610d3157610100808354040283529160200191610d5a565b820191905f5260205f20905b815481529060010190602001808311610d3d57829003601f168201915b505050505081526020019060010190610cc6565b5050505090509450945094509450509193509193565b6105503383836112fe565b610d98816111be565b50335f908152600e6020908152604080832084845290915290205460ff1615610dbe5750565b335f818152600e602090815260408083208584528252808320805460ff19166001908117909155938352600f8252822080549384018155825290200155565b610e0884848461069f565b610699338585858561139c565b5f600b5f8154610e249061275f565b91829055509050610e3533826114c4565b604080516080810182528681526020808201879052818301869052606082018590525f848152600c9091529190912081518190610e7290826127bb565b5060208201516001820190610e8790826127bb565b5060408201516002820190610e9c90826127bb565b5060608201518051610eb89160038401916020909101906120bf565b50905050610ec55f6114dd565b5f828152600d60205260409020819055610ede90611203565b505f818152600d6020526040902054610ef79033611212565b50604051819033907f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe905f90a3949350505050565b6060610f37826111be565b505f610f4d60408051602081019091525f815290565b90505f815111610f6b5760405180602001604052805f815250610f96565b80610f75846114ef565b604051602001610f8692919061288d565b6040516020818303038152906040525b9392505050565b610fa6846111be565b505f610fe78484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061123892505050565b5f868152600d6020526040902054909150611002908261158c565b5f868152600d6020526040902081905561101b90611203565b505f858152600d6020526040902054611037906107bc8761093f565b506040516001815285907f5ea93eb915c6cf74f1a713a72c5ce3379397906941134ff1faf2b265f0adeb9f906020016107f0565b611073611273565b6001600160a01b03811661109c57604051631e4fbdf760e01b81525f60048201526024016105b0565b6110a5816112a0565b50565b335f908152600e6020908152604080832084845290915290205460ff166110cc5750565b335f818152600e602090815260408083208584528252808320805460ff19169055928252600f9052908120905b81548110156108e5578282828154811061111557611115612737565b905f5260205f200154036111925781548290611133906001906128a1565b8154811061114357611143612737565b905f5260205f20015482828154811061115e5761115e612737565b905f5260205f2001819055508180548061117a5761117a6128b4565b600190038181905f5260205f20015f90559055505050565b6001016110f9565b5f6001600160e01b0319821663780e9d6360e01b14806104895750610489826115ba565b5f818152600260205260408120546001600160a01b03168061048957604051637e27328960e01b8152600481018490526024016105b0565b6108e58383836001611609565b5f61120e8230611738565b5090565b5f61121d8383611738565b5090919050565b5f6112308484846117c1565b949350505050565b5f610f968383600461188c565b5f82611257576112545f6114dd565b92505b81611268576112655f6114dd565b91505b610f9683835f6119ac565b600a546001600160a01b03163314610a165760405163118cdaa760e01b81523360048201526024016105b0565b600a80546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b03821661133057604051630b61174360e31b81526001600160a01b03831660048201526024016105b0565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b156114bd57604051630a85bd0160e11b81526001600160a01b0384169063150b7a02906113de9088908890879087906004016128c8565b6020604051808303815f875af1925050508015611418575060408051601f3d908101601f19168201909252611415918101906128fe565b60015b61147f573d808015611445576040519150601f19603f3d011682016040523d82523d5f602084013e61144a565b606091505b5080515f0361147757604051633250574960e11b81526001600160a01b03851660048201526024016105b0565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b146114bb57604051633250574960e11b81526001600160a01b03851660048201526024016105b0565b505b5050505050565b610550828260405180602001604052805f815250611aa7565b5f6104898263ffffffff166004611abe565b60605f6114fb83611b73565b60010190505f8167ffffffffffffffff81111561151a5761151a612450565b6040519080825280601f01601f191660200182016040528015611544576020820181803683370190505b5090508181016020015b5f19017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461154e57509392505050565b5f8261159e5761159b5f6114dd565b92505b816115af576115ac5f6114dd565b91505b610f9683835f611c54565b5f6001600160e01b031982166380ac58cd60e01b14806115ea57506001600160e01b03198216635b5e139f60e01b145b8061048957506301ffc9a760e01b6001600160e01b0319831614610489565b808061161d57506001600160a01b03821615155b156116fc575f61162c846111be565b90506001600160a01b038316158015906116585750826001600160a01b0316816001600160a01b031614155b801561168957506001600160a01b038082165f9081526005602090815260408083209387168352929052205460ff16155b156116b25760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016105b0565b81156116fa5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f908152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b5f7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497008054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b1580156117a6575f5ffd5b505af11580156117b8573d5f5f3e3d5ffd5b50505050505050565b5f5f6117ce858585611d09565b90506001600160a01b03811661182a5761182584600880545f838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b61184d565b846001600160a01b0316816001600160a01b03161461184d5761184d8185611e08565b6001600160a01b0385166118695761186484611e85565b611230565b846001600160a01b0316816001600160a01b031614611230576112308585611f2c565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163196d0b9b60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b039091169063196d0b9b90611905908890339089908990600401612939565b6020604051808303815f875af1158015611921573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119459190612978565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b15801561198e575f5ffd5b505af11580156119a0573d5f5f3e3d5ffd5b50505050509392505050565b5f5f82156119bf5750600160f81b6119c2565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701546040516303056db360e31b815260048101879052602481018690527fff00000000000000000000000000000000000000000000000000000000000000831660448201527f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b03169063182b6d98906064015b6020604051808303815f875af1158015611a79573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a9d9190612978565b9695505050505050565b611ab18383611f7a565b6108e5335f85858561139c565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051639cd07acb60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b0390911690639cd07acb90611b33908790879060040161298f565b6020604051808303815f875af1158015611b4f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112309190612978565b5f807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611bbb577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611be7576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611c0557662386f26fc10000830492506010015b6305f5e1008310611c1d576305f5e100830492506008015b6127108310611c3157612710830492506004015b60648310611c43576064830492506002015b600a83106104895760010192915050565b5f5f8215611c675750600160f81b611c6a565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163022f65e760e31b815260048101879052602481018690527fff00000000000000000000000000000000000000000000000000000000000000831660448201527f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b03169063117b2f3890606401611a5d565b5f828152600260205260408120546001600160a01b0390811690831615611d3557611d35818486611fdb565b6001600160a01b03811615611d6f57611d505f855f5f611609565b6001600160a01b0381165f90815260036020526040902080545f190190555b6001600160a01b03851615611d9d576001600160a01b0385165f908152600360205260409020805460010190555b5f84815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b5f611e12836109c0565b5f838152600760209081526040808320546001600160a01b0388168452600690925290912091925090818314611e67575f83815260208281526040808320548584528184208190558352600790915290208290555b5f938452600760209081526040808620869055938552525081205550565b6008545f90611e96906001906128a1565b5f8381526009602052604081205460088054939450909284908110611ebd57611ebd612737565b905f5260205f20015490508060088381548110611edc57611edc612737565b5f918252602080832090910192909255828152600990915260408082208490558582528120556008805480611f1357611f136128b4565b600190038181905f5260205f20015f9055905550505050565b5f6001611f38846109c0565b611f4291906128a1565b6001600160a01b039093165f908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160a01b038216611fa357604051633250574960e11b81525f60048201526024016105b0565b5f611faf83835f611224565b90506001600160a01b038116156108e5576040516339e3563760e11b81525f60048201526024016105b0565b611fe683838361203f565b6108e5576001600160a01b03831661201457604051637e27328960e01b8152600481018290526024016105b0565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016105b0565b5f6001600160a01b038316158015906112305750826001600160a01b0316846001600160a01b0316148061209757506001600160a01b038085165f9081526005602090815260408083209387168352929052205460ff165b806112305750505f908152600460205260409020546001600160a01b03908116911614919050565b828054828255905f5260205f20908101928215612103579160200282015b8281111561210357825182906120f390826127bb565b50916020019190600101906120dd565b5061120e9291505b8082111561120e575f61211e8282612127565b5060010161210b565b508054612133906126ff565b5f825580601f10612142575050565b601f0160209004905f5260205f20908101906110a591905b8082111561120e575f815560010161215a565b6001600160e01b0319811681146110a5575f5ffd5b5f60208284031215612192575f5ffd5b8135610f968161216d565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610f96602083018461219d565b5f602082840312156121ed575f5ffd5b5035919050565b80356001600160a01b038116811461220a575f5ffd5b919050565b5f5f60408385031215612220575f5ffd5b612229836121f4565b946020939093013593505050565b5f5f5f60608486031215612249575f5ffd5b612252846121f4565b95602085013595506040909401359392505050565b5f5f5f60608486031215612279575f5ffd5b612282846121f4565b9250612290602085016121f4565b929592945050506040919091013590565b5f5f5f5f606085870312156122b4575f5ffd5b8435935060208501359250604085013567ffffffffffffffff8111156122d8575f5ffd5b8501601f810187136122e8575f5ffd5b803567ffffffffffffffff8111156122fe575f5ffd5b87602082840101111561230f575f5ffd5b949793965060200194505050565b5f6020828403121561232d575f5ffd5b610f96826121f4565b602080825282518282018190525f918401906040840190835b8181101561236d57835183526020938401939092019160010161234f565b509095945050505050565b608081525f61238a608083018761219d565b828103602084015261239c818761219d565b905082810360408401526123b0818661219d565b9050828103606084015280845180835260208301915060208160051b840101602087015f5b8381101561240757601f198684030185526123f183835161219d565b60209586019590935091909101906001016123d5565b50909a9950505050505050505050565b5f5f60408385031215612428575f5ffd5b612431836121f4565b915060208301358015158114612445575f5ffd5b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561248d5761248d612450565b604052919050565b5f5f67ffffffffffffffff8411156124af576124af612450565b50601f8301601f19166020016124c481612464565b9150508281528383830111156124d8575f5ffd5b828260208301375f602084830101529392505050565b5f5f5f5f60808587031215612501575f5ffd5b61250a856121f4565b9350612518602086016121f4565b925060408501359150606085013567ffffffffffffffff81111561253a575f5ffd5b8501601f8101871361254a575f5ffd5b61255987823560208401612495565b91505092959194509250565b5f82601f830112612574575f5ffd5b610f9683833560208501612495565b5f5f5f5f60808587031215612596575f5ffd5b843567ffffffffffffffff8111156125ac575f5ffd5b6125b887828801612565565b945050602085013567ffffffffffffffff8111156125d4575f5ffd5b6125e087828801612565565b935050604085013567ffffffffffffffff8111156125fc575f5ffd5b61260887828801612565565b925050606085013567ffffffffffffffff811115612624575f5ffd5b8501601f81018713612634575f5ffd5b803567ffffffffffffffff81111561264e5761264e612450565b8060051b61265e60208201612464565b9182526020818401810192908101908a841115612679575f5ffd5b6020850192505b838310156126bf57823567ffffffffffffffff81111561269e575f5ffd5b6126ad8c602083890101612565565b83525060209283019290910190612680565b979a9699509497505050505050565b5f5f604083850312156126df575f5ffd5b6126e8836121f4565b91506126f6602084016121f4565b90509250929050565b600181811c9082168061271357607f821691505b60208210810361273157634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b5f600182016127705761277061274b565b5060010190565b601f8211156108e557805f5260205f20601f840160051c8101602085101561279c5750805b601f840160051c820191505b818110156114bd575f81556001016127a8565b815167ffffffffffffffff8111156127d5576127d5612450565b6127e9816127e384546126ff565b84612777565b6020601f82116001811461281b575f83156128045750848201515b5f19600385901b1c1916600184901b1784556114bd565b5f84815260208120601f198516915b8281101561284a578785015182556020948501946001909201910161282a565b508482101561286757868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b5f81518060208401855e5f93019283525090919050565b5f61123061289b8386612876565b84612876565b818103818111156104895761048961274b565b634e487b7160e01b5f52603160045260245ffd5b6001600160a01b03851681526001600160a01b0384166020820152826040820152608060608201525f611a9d608083018461219d565b5f6020828403121561290e575f5ffd5b8151610f968161216d565b6054811061293557634e487b7160e01b5f52602160045260245ffd5b9052565b8481526001600160a01b0384166020820152608060408201525f612960608083018561219d565b905061296f6060830184612919565b95945050505050565b5f60208284031215612988575f5ffd5b5051919050565b82815260408101610f96602083018461291956fea164736f6c634300081b000a";

type CardCollectionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CardCollectionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CardCollection__factory extends ContractFactory {
  constructor(...args: CardCollectionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CardCollection & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CardCollection__factory {
    return super.connect(runner) as CardCollection__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CardCollectionInterface {
    return new Interface(_abi) as CardCollectionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CardCollection {
    return new Contract(address, _abi, runner) as unknown as CardCollection;
  }
}
